{
	"users": { 
		"qerjqreipeqr" : { 			 // Randomly generated key using Database.Database.child("users").childByAutoId().key
			"uid" :  "qerjqreipeqr", // The same as the key for the user object in firebase
			"email" : "1@test.com",
			"nickname" : "Test User 1",
			"houses" : {
				"erv2rv2rv" : true,  // Keys of houses
				"eeiiv2eri" : true,
				"2rv2r4v4r" : true
			},
			"phone_number" : 111111111
			
		}
	},
	
	"user_emails" : {
		"1@test&com" : { "created": true,		// To find a users UID from a given email
						 "uid" : "qerjqreipeqr"
						}
		, 
		"to@be&created" : { "created" : false,  // if a user is added to a house before an account is created for that email an account here will be
							"houses" : {"erv2rv2rv": true}
						}
	},

	"houses" : {  					// Randomly generated key using Database.Database.child("users").childByAutoId().key
		"erv2rv2rv" : {
			"houseID" : "erv2rv2rv",
			"house_name" : "Test House H1",
			"house_users" : {		// Users who's accounts have not been created do not show up here
				"qerjqreipeqr" : {
					"email": "1@test.com",
					"nickname" : "House User 1"
				},
				"regqw3rgr4rg" : {	
					"email": "2@test.com",
					"nickname" : "House User 2"
				}, 
			},
			"owner" : "1@test.com",
			"recent_charges" : [ "C1", "C3", "C3"],
			"balances" : {					//Stores balances between individuals in house
				"UID1" : {
					"UID2" : 20.5,			// Value at "house/\(houseID)/balances/\(UID-A)/\(UID-B)" is how much UID-A owes UID-B
					"UID3" : -52,			// If no value exists the balance between the individuals is 0
					"house" : 2.3			// Some (not necessarily all) house members will also have a balance with the house-fund
				},
				"UID2" : {
					"UID1" : 20.5,
					"UID2" : 0,
					"house" : -15,
				},
				"UID3" : {
					"UID1" : 52,
					"UID4" : 10,
					"house" : 12.7,
				},
				"UID4" : {
					"UID3" : -10,
				}
			}

		}
	},

	"chores" : {  					
		"etnrsbwtj3" : {				// Randomly generated key using Database.Database.child("users").childByAutoId().key
			"choreID" : "etnrsbwtj",
			"title" : "Dishes",
			"assigned_by" : "pqerpivb", //User ids of the users who this chore is assigned to 
			"responsible" : ["qerjqreipeqr"], //User ids of the user(s) who this chore is assigned to 
			"completed" : false,
			"time_assigned" : 00, // An NSTimeStamp
			"time_due" : 00, // An NSTimeStamp
			"time_completed" : 00, // An NSTimeStamp
			"house" : "erv2rv2rv", // HouseID
			"imageDownloadURL" : "the/path/to/find/the/url",
			"description" : "Do the fucking dishes Gene!"
		}
	},

	"charges" : { 					//NOT IMPLEMENTED IN DATABASE
		"C1" : {
			"house" : "H1",
			"from_user" : "1@test.com",
			"to_user" : "2@test.com",
			"amount" : 22.4,
			"datetime": 124142552
		}
	}
}